{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"names":["segmentIosCss","segmentMdCss","Segment","hostRef","registerInstance","ionChange","createEvent","ionSelect","ionStyle","didInit","activated","disabled","scrollable","onClick","ev","current","target","previous","checked","value","checkButton","setCheckedClasses","oldValue","emit","valueAfterGesture","gestureChanged","buttons","getButtons","button","gesture","enable","emitStyle","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disabledChanged","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","undefined","Array","from","querySelectorAll","useRippleEffect","config","getBoolean","find","root","shadowRoot","ripple","querySelector","pointerCoord","x","y","then","remove","forEach","classList","add","clicked","tagName","previousIndicator","getIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","writeTask","style","setProperty","index","findIndex","next","length","isEnd","isRTL","document","dir","nextIndex","rect","currentX","previousY","top","height","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","mode","getIonMode","h","Host","class","createColorClasses","color","hostContext","getElement","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateState","closest","addEventListener","removeEventListener","hasIcon","hasLabel","part"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA,IAAMA,aAAa,GAAG,ktCAAtB;AAEA,IAAMC,YAAY,GAAG,ymBAArB;;AAEA,IAAMC,OAAO;AACT,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACjBC,gEAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA,SAAKE,SAAL,GAAiBC,4DAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;AACA,SAAKC,SAAL,GAAiBD,4DAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;AACA,SAAKE,QAAL,GAAgBF,4DAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA,SAAKG,OAAL,GAAe,KAAf;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA;;;;AAGA,SAAKC,QAAL,GAAgB,KAAhB;AACA;;;;;;AAKA,SAAKC,UAAL,GAAkB,KAAlB;;AACA,SAAKC,OAAL,GAAe,UAACC,EAAD,EAAQ;AACnB,UAAMC,OAAO,GAAGD,EAAE,CAACE,MAAnB;AACA,UAAMC,QAAQ,GAAG,KAAI,CAACC,OAAtB;AACA,WAAI,CAACC,KAAL,GAAaJ,OAAO,CAACI,KAArB;;AACA,UAAI,KAAI,CAACP,UAAT,EAAqB;AACjB,YAAIK,QAAJ,EAAc;AACV,eAAI,CAACG,WAAL,CAAiBH,QAAjB,EAA2BF,OAA3B;AACH,SAFD,MAGK;AACD,eAAI,CAACM,iBAAL;AACH;AACJ;;AACD,WAAI,CAACH,OAAL,GAAeH,OAAf;AACH,KAbD;AAcH;;AAhCQ;AAAA;AAAA,iCAiCII,KAjCJ,EAiCWG,QAjCX,EAiCqB;AAC1B,WAAKf,SAAL,CAAegB,IAAf,CAAoB;AAAEJ,aAAK,EAALA;AAAF,OAApB;;AACA,UAAIG,QAAQ,KAAK,EAAb,IAAmB,KAAKb,OAA5B,EAAqC;AACjC,YAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,eAAKL,SAAL,CAAekB,IAAf,CAAoB;AAAEJ,iBAAK,EAALA;AAAF,WAApB;AACH,SAFD,MAGK;AACD,eAAKK,iBAAL,GAAyBL,KAAzB;AACH;AACJ;AACJ;AA3CQ;AAAA;AAAA,sCA4CS;AACd,WAAKM,cAAL;AACA,UAAMC,OAAO,GAAG,KAAKC,UAAL,EAAhB;;AAFc,sLAGOD,OAHP;AAAA;;AAAA;AAGd,4DAA8B;AAAA,cAAnBE,MAAmB;AAC1BA,gBAAM,CAACjB,QAAP,GAAkB,KAAKA,QAAvB;AACH;AALa;AAAA;AAAA;AAAA;AAAA;AAMjB;AAlDQ;AAAA;AAAA,qCAmDQ;AACb,UAAI,KAAKkB,OAAL,IAAgB,CAAC,KAAKjB,UAA1B,EAAsC;AAClC,aAAKiB,OAAL,CAAaC,MAAb,CAAoB,CAAC,KAAKnB,QAA1B;AACH;AACJ;AAvDQ;AAAA;AAAA,wCAwDW;AAChB,WAAKoB,SAAL;AACH;AA1DQ;AAAA;AAAA,wCA2DW;AAChB,WAAKA,SAAL;AACH;AA7DQ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AA+DL,qBAAKV,iBAAL;AA/DK;AAAA,uBAgEiB,yJAhEjB;;AAAA;AAgEL,qBAAKQ,OAhEA,iBAgEgDG,aAhEhD,CAgE8D;AAC/DC,oBAAE,EAAE,KAAKA,EADsD;AAE/DC,6BAAW,EAAE,SAFkD;AAG/DC,iCAAe,EAAE,GAH8C;AAI/DC,2BAAS,EAAE,CAJoD;AAK/DC,yBAAO,EAAE,KALsD;AAM/DC,yBAAO,EAAE,iBAAAxB,EAAE;AAAA,2BAAI,MAAI,CAACwB,OAAL,CAAaxB,EAAb,CAAJ;AAAA,mBANoD;AAO/DyB,wBAAM,EAAE,gBAAAzB,EAAE;AAAA,2BAAI,MAAI,CAACyB,MAAL,CAAYzB,EAAZ,CAAJ;AAAA,mBAPqD;AAQ/D0B,uBAAK,EAAE,eAAA1B,EAAE;AAAA,2BAAI,MAAI,CAAC0B,KAAL,CAAW1B,EAAX,CAAJ;AAAA;AARsD,iBAhE9D;AA0EL,qBAAKe,OAAL,CAAaC,MAAb,CAAoB,CAAC,KAAKlB,UAA1B;AACA,qBAAKa,cAAL;;AACA,oBAAI,KAAKd,QAAT,EAAmB;AACf,uBAAK8B,eAAL;AACH;;AACD,qBAAKhC,OAAL,GAAe,IAAf;;AA/EK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAiFDiC,MAjFC,EAiFO;AACZ,WAAKC,QAAL,CAAcD,MAAd;AACH;AAnFQ;AAAA;AAAA,2BAoFFA,MApFE,EAoFM;AACX,WAAKE,YAAL,CAAkBF,MAAlB;AACH;AAtFQ;AAAA;AAAA,0BAuFHA,MAvFG,EAuFK;AACV,WAAKG,YAAL,CAAkB,KAAlB;AACA,UAAMC,kBAAkB,GAAG,KAAKF,YAAL,CAAkBF,MAAlB,EAA0B,IAA1B,CAA3B;AACAA,YAAM,CAACK,KAAP,CAAaC,wBAAb;;AACA,UAAIF,kBAAJ,EAAwB;AACpB,aAAKG,SAAL,CAAeP,MAAf;AACH;;AACD,UAAMvB,KAAK,GAAG,KAAKK,iBAAnB;;AACA,UAAIL,KAAK,KAAK+B,SAAd,EAAyB;AACrB,aAAK7C,SAAL,CAAekB,IAAf,CAAoB;AAAEJ,eAAK,EAALA;AAAF,SAApB;AACA,aAAKK,iBAAL,GAAyB0B,SAAzB;AACH;AACJ;AAnGQ;AAAA;AAAA,iCAoGI;AACT,aAAOC,KAAK,CAACC,IAAN,CAAW,KAAKnB,EAAL,CAAQoB,gBAAR,CAAyB,oBAAzB,CAAX,CAAP;AACH;AACD;;;;;;AAvGS;AAAA;AAAA,8BA4GCX,MA5GD,EA4GS;AAAA;;AACd,UAAMY,eAAe,GAAGC,2DAAM,CAACC,UAAP,CAAkB,UAAlB,EAA8B,IAA9B,KAAuCD,2DAAM,CAACC,UAAP,CAAkB,cAAlB,EAAkC,IAAlC,CAA/D;;AACA,UAAI,CAACF,eAAL,EAAsB;AAClB;AACH;;AACD,UAAM5B,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,UAAMT,OAAO,GAAGQ,OAAO,CAAC+B,IAAR,CAAa,UAAA7B,MAAM;AAAA,eAAIA,MAAM,CAACT,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,OAAnB,CAAhB;AACA,UAAMuC,IAAI,GAAGxC,OAAO,CAACyC,UAAR,IAAsBzC,OAAnC;AACA,UAAM0C,MAAM,GAAGF,IAAI,CAACG,aAAL,CAAmB,mBAAnB,CAAf;;AACA,UAAI,CAACD,MAAL,EAAa;AACT;AACH;;AAXa,0BAYGE,8DAAY,CAACpB,MAAM,CAACK,KAAR,CAZf;AAAA,UAYNgB,CAZM,iBAYNA,CAZM;AAAA,UAYHC,CAZG,iBAYHA,CAZG;;AAadJ,YAAM,CAACX,SAAP,CAAiBc,CAAjB,EAAoBC,CAApB,EAAuBC,IAAvB,CAA4B,UAAAC,MAAM;AAAA,eAAIA,MAAM,EAAV;AAAA,OAAlC;AACH;AACD;;;;;AA3HS;AAAA;AAAA,iCA+HIxD,SA/HJ,EA+He;AACpB,UAAMgB,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACAD,aAAO,CAACyC,OAAR,CAAgB,UAAAvC,MAAM,EAAI;AACtB,YAAIlB,SAAJ,EAAe;AACXkB,gBAAM,CAACwC,SAAP,CAAiBC,GAAjB,CAAqB,0BAArB;AACH,SAFD,MAGK;AACDzC,gBAAM,CAACwC,SAAP,CAAiBF,MAAjB,CAAwB,0BAAxB;AACH;AACJ,OAPD;AAQA,WAAKxD,SAAL,GAAiBA,SAAjB;AACH;AA1IQ;AAAA;AAAA,6BA2IAgC,MA3IA,EA2IQ;AAAA;;AACb,UAAM4B,OAAO,GAAG5B,MAAM,CAACK,KAAP,CAAa/B,MAA7B;AACA,UAAMU,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,UAAMT,OAAO,GAAGQ,OAAO,CAAC+B,IAAR,CAAa,UAAA7B,MAAM;AAAA,eAAIA,MAAM,CAACT,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,OAAnB,CAAhB,CAHa,CAIb;AACA;;AACA,UAAImD,OAAO,CAACC,OAAR,KAAoB,oBAAxB,EAA8C;AAC1C;AACH,OARY,CASb;;;AACA,UAAI,CAACrD,OAAL,EAAc;AACV,aAAKC,KAAL,GAAamD,OAAO,CAACnD,KAArB;AACA,aAAKE,iBAAL;AACH,OAbY,CAcb;AACA;;;AACA,UAAI,KAAKF,KAAL,KAAemD,OAAO,CAACnD,KAA3B,EAAkC;AAC9B,aAAK0B,YAAL,CAAkB,IAAlB;AACH;AACJ;AA9JQ;AAAA;AAAA,iCA+JIjB,MA/JJ,EA+JY;AACjB,UAAM8B,IAAI,GAAG9B,MAAM,CAAC+B,UAAP,IAAqB/B,MAAlC;AACA,aAAO8B,IAAI,CAACG,aAAL,CAAmB,2BAAnB,CAAP;AACH;AAlKQ;AAAA;AAAA,gCAmKG5C,QAnKH,EAmKaF,OAnKb,EAmKsB;AAC3B,UAAMyD,iBAAiB,GAAG,KAAKC,YAAL,CAAkBxD,QAAlB,CAA1B;AACA,UAAMyD,gBAAgB,GAAG,KAAKD,YAAL,CAAkB1D,OAAlB,CAAzB;;AACA,UAAIyD,iBAAiB,KAAK,IAAtB,IAA8BE,gBAAgB,KAAK,IAAvD,EAA6D;AACzD;AACH;;AACD,UAAMC,kBAAkB,GAAGH,iBAAiB,CAACI,qBAAlB,EAA3B;AACA,UAAMC,iBAAiB,GAAGH,gBAAgB,CAACE,qBAAjB,EAA1B;AACA,UAAME,UAAU,GAAGH,kBAAkB,CAACI,KAAnB,GAA2BF,iBAAiB,CAACE,KAAhE;AACA,UAAMC,SAAS,GAAGL,kBAAkB,CAACM,IAAnB,GAA0BJ,iBAAiB,CAACI,IAA9D,CAT2B,CAU3B;AACA;;AACA,UAAMC,SAAS,yBAAkBF,SAAlB,8BAA+CF,UAA/C,MAAf;AACAK,kEAAS,CAAC,YAAM;AACZ;AACAT,wBAAgB,CAACN,SAAjB,CAA2BF,MAA3B,CAAkC,mCAAlC;AACAQ,wBAAgB,CAACU,KAAjB,CAAuBC,WAAvB,CAAmC,WAAnC,EAAgDH,SAAhD,EAHY,CAIZ;;AACAR,wBAAgB,CAACE,qBAAjB,GALY,CAMZ;;AACAF,wBAAgB,CAACN,SAAjB,CAA2BC,GAA3B,CAA+B,mCAA/B,EAPY,CAQZ;;AACAK,wBAAgB,CAACU,KAAjB,CAAuBC,WAAvB,CAAmC,WAAnC,EAAgD,EAAhD;AACH,OAVQ,CAAT;AAWA,WAAKlE,KAAL,GAAaJ,OAAO,CAACI,KAArB;AACA,WAAKE,iBAAL;AACH;AA7LQ;AAAA;AAAA,wCA8LW;AAAA;;AAChB,UAAMK,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,UAAM2D,KAAK,GAAG5D,OAAO,CAAC6D,SAAR,CAAkB,UAAA3D,MAAM;AAAA,eAAIA,MAAM,CAACT,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,OAAxB,CAAd;AACA,UAAMqE,IAAI,GAAGF,KAAK,GAAG,CAArB,CAHgB,CAIhB;;AACA,WAAKpE,OAAL,GAAeQ,OAAO,CAAC+B,IAAR,CAAa,UAAA7B,MAAM;AAAA,eAAIA,MAAM,CAACT,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,OAAnB,CAAf;;AALgB,uLAMKO,OANL;AAAA;;AAAA;AAMhB,+DAA8B;AAAA,cAAnBE,MAAmB;AAC1BA,gBAAM,CAACwC,SAAP,CAAiBF,MAAjB,CAAwB,8BAAxB;AACH;AARe;AAAA;AAAA;AAAA;AAAA;;AAShB,UAAIsB,IAAI,GAAG9D,OAAO,CAAC+D,MAAnB,EAA2B;AACvB/D,eAAO,CAAC8D,IAAD,CAAP,CAAcpB,SAAd,CAAwBC,GAAxB,CAA4B,8BAA5B;AACH;AACJ;AA1MQ;AAAA;AAAA,iCA2MI3B,MA3MJ,EA2M2B;AAAA;;AAAA,UAAfgD,KAAe,uEAAP,KAAO;AAChC,UAAMC,KAAK,GAAGC,QAAQ,CAACC,GAAT,KAAiB,KAA/B;AACA,UAAMnF,SAAS,GAAG,KAAKA,SAAvB;AACA,UAAMgB,OAAO,GAAG,KAAKC,UAAL,EAAhB;AACA,UAAM2D,KAAK,GAAG5D,OAAO,CAAC6D,SAAR,CAAkB,UAAA3D,MAAM;AAAA,eAAIA,MAAM,CAACT,KAAP,KAAiB,MAAI,CAACA,KAA1B;AAAA,OAAxB,CAAd;AACA,UAAMF,QAAQ,GAAGS,OAAO,CAAC4D,KAAD,CAAxB;AACA,UAAIvE,OAAJ;AACA,UAAI+E,SAAJ;;AACA,UAAIR,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd;AACH,OAV+B,CAWhC;AACA;;;AACA,UAAMS,IAAI,GAAG9E,QAAQ,CAAC2D,qBAAT,EAAb;AACA,UAAMK,IAAI,GAAGc,IAAI,CAACd,IAAlB;AACA,UAAMF,KAAK,GAAGgB,IAAI,CAAChB,KAAnB,CAfgC,CAgBhC;AACA;AACA;;AACA,UAAMiB,QAAQ,GAAGtD,MAAM,CAACsD,QAAxB;AACA,UAAMC,SAAS,GAAGF,IAAI,CAACG,GAAL,GAAYH,IAAI,CAACI,MAAL,GAAc,CAA5C;AACA,UAAMC,MAAM,GAAGR,QAAQ,CAACS,gBAAT,CAA0BL,QAA1B,EAAoCC,SAApC,CAAf;AACA,UAAMK,aAAa,GAAGX,KAAK,GAAGK,QAAQ,GAAIf,IAAI,GAAGF,KAAtB,GAA+BiB,QAAQ,GAAGf,IAArE;AACA,UAAMsB,aAAa,GAAGZ,KAAK,GAAGK,QAAQ,GAAGf,IAAd,GAAqBe,QAAQ,GAAIf,IAAI,GAAGF,KAAnE,CAvBgC,CAwBhC;AACA;AACA;;AACA,UAAIrE,SAAS,IAAI,CAACgF,KAAlB,EAAyB;AACrB;AACA,YAAIY,aAAJ,EAAmB;AACf,cAAME,QAAQ,GAAGlB,KAAK,GAAG,CAAzB;;AACA,cAAIkB,QAAQ,IAAI,CAAhB,EAAmB;AACfV,qBAAS,GAAGU,QAAZ;AACH,WAJc,CAKf;;AACH,SAND,MAOK,IAAID,aAAJ,EAAmB;AACpB,cAAI7F,SAAS,IAAI,CAACgF,KAAlB,EAAyB;AACrB,gBAAMc,SAAQ,GAAGlB,KAAK,GAAG,CAAzB;;AACA,gBAAIkB,SAAQ,GAAG9E,OAAO,CAAC+D,MAAvB,EAA+B;AAC3BK,uBAAS,GAAGU,SAAZ;AACH;AACJ;AACJ;;AACD,YAAIV,SAAS,KAAK5C,SAAd,IAA2B,CAACxB,OAAO,CAACoE,SAAD,CAAP,CAAmBnF,QAAnD,EAA6D;AACzDI,iBAAO,GAAGW,OAAO,CAACoE,SAAD,CAAjB;AACH;AACJ,OA/C+B,CAgDhC;AACA;;;AACA,UAAI,CAACpF,SAAD,IAAcgF,KAAlB,EAAyB;AACrB3E,eAAO,GAAGqF,MAAV;AACH;AACD;;;AACA,UAAIrF,OAAO,IAAI,IAAf,EAAqB;AACjB;;;;;AAKA,YAAIA,OAAO,CAACwD,OAAR,KAAoB,aAAxB,EAAuC;AACnC,iBAAO,KAAP;AACH;;AACD,YAAItD,QAAQ,KAAKF,OAAjB,EAA0B;AACtB,eAAKK,WAAL,CAAiBH,QAAjB,EAA2BF,OAA3B;AACH;AACJ;;AACD,aAAO,IAAP;AACH;AA/QQ;AAAA;AAAA,gCAgRG;AACR,WAAKP,QAAL,CAAce,IAAd,CAAmB;AACf,mBAAW;AADI,OAAnB;AAGH;AApRQ;AAAA;AAAA,6BAqRA;AAAA;;AACL,UAAMkF,IAAI,GAAGC,mEAAU,CAAC,IAAD,CAAvB;AACA,aAAQC,4DAAC,CAACC,oDAAD,EAAO;AAAE/F,eAAO,EAAE,KAAKA,OAAhB;AAAyBgG,aAAK,EAAEC,4DAAkB,CAAC,KAAKC,KAAN,uMACzDN,IADyD,EAClD,IADkD,6KAE1D,YAF0D,EAE5CO,4DAAW,CAAC,aAAD,EAAgB,KAAK/E,EAArB,CAFiC,6KAG1D,kBAH0D,EAGtC+E,4DAAW,CAAC,oBAAD,EAAuB,KAAK/E,EAA5B,CAH2B,6KAI1D,mBAJ0D,EAIrC,KAAKvB,SAJgC,6KAK1D,kBAL0D,EAKtC,KAAKC,QALiC,6KAM1D,oBAN0D,EAMpC,KAAKC,UAN+B;AAAlD,OAAP,EAOC+F,4DAAC,CAAC,MAAD,EAAS,IAAT,CAPF,CAAT;AAQH;AA/RQ;AAAA;AAAA,wBAgSA;AAAE,aAAOM,4DAAU,CAAC,IAAD,CAAjB;AAA0B;AAhS5B;AAAA;AAAA,wBAiSa;AAAE,aAAO;AAC3B,iBAAS,CAAC,cAAD,CADkB;AAE3B,oBAAY,CAAC,iBAAD;AAFe,OAAP;AAGpB;AApSK;;AAAA;AAAA,GAAb;;AAsSA/G,OAAO,CAACkF,KAAR,GAAgB;AACZ8B,KAAG,EAAElH,aADO;AAEZmH,IAAE,EAAElH;AAFQ,CAAhB;AAKA,IAAMmH,mBAAmB,GAAG,+rSAA5B;AAEA,IAAMC,kBAAkB,GAAG,u/RAA3B;AAEA,IAAIC,GAAG,GAAG,CAAV;;AACA,IAAMC,aAAa;AACf,yBAAYpH,OAAZ,EAAqB;AAAA;;AAAA;;AACjBC,gEAAgB,CAAC,IAAD,EAAOD,OAAP,CAAhB;AACA,SAAKqH,SAAL,GAAiB,IAAjB;AACA,SAAKtG,OAAL,GAAe,KAAf;AACA;;;;AAGA,SAAKP,QAAL,GAAgB,KAAhB;AACA;;;;AAGA,SAAK8G,MAAL,GAAc,UAAd;AACA;;;;AAGA,SAAKC,IAAL,GAAY,QAAZ;AACA;;;;AAGA,SAAKvG,KAAL,GAAa,YAAamG,GAAG,EAA7B;;AACA,SAAKK,WAAL,GAAmB,YAAM;AACrB,UAAI,MAAI,CAACH,SAAT,EAAoB;AAChB,cAAI,CAACtG,OAAL,GAAe,MAAI,CAACsG,SAAL,CAAerG,KAAf,KAAyB,MAAI,CAACA,KAA7C;AACH;AACJ,KAJD;AAKH;;AA1Bc;AAAA;AAAA,wCA2BK;AAChB,UAAMqG,SAAS,GAAG,KAAKA,SAAL,GAAiB,KAAKvF,EAAL,CAAQ2F,OAAR,CAAgB,aAAhB,CAAnC;;AACA,UAAIJ,SAAJ,EAAe;AACX,aAAKG,WAAL;AACAH,iBAAS,CAACK,gBAAV,CAA2B,WAA3B,EAAwC,KAAKF,WAA7C;AACH;AACJ;AAjCc;AAAA;AAAA,2CAkCQ;AACnB,UAAMH,SAAS,GAAG,KAAKA,SAAvB;;AACA,UAAIA,SAAJ,EAAe;AACXA,iBAAS,CAACM,mBAAV,CAA8B,WAA9B,EAA2C,KAAKH,WAAhD;AACA,aAAKH,SAAL,GAAiB,IAAjB;AACH;AACJ;AAxCc;AAAA;AAAA,6BA+CN;AAAA;;AAAA,UACGtG,OADH,GAC0D,IAD1D,CACGA,OADH;AAAA,UACYwG,IADZ,GAC0D,IAD1D,CACYA,IADZ;AAAA,UACkB/G,QADlB,GAC0D,IAD1D,CACkBA,QADlB;AAAA,UAC4BoH,OAD5B,GAC0D,IAD1D,CAC4BA,OAD5B;AAAA,UACqCC,QADrC,GAC0D,IAD1D,CACqCA,QADrC;AAAA,UAC+CP,MAD/C,GAC0D,IAD1D,CAC+CA,MAD/C;AAEL,UAAMhB,IAAI,GAAGC,mEAAU,CAAC,IAAD,CAAvB;AACA,aAAQC,4DAAC,CAACC,oDAAD,EAAO;AAAE,yBAAiBjG,QAAQ,GAAG,MAAH,GAAY,IAAvC;AAA6CkG,aAAK,6KACzDJ,IADyD,EAClD,IADkD,gKAE1D,YAF0D,EAE5CO,4DAAW,CAAC,aAAD,EAAgB,KAAK/E,EAArB,CAFiC,gKAG1D,kBAH0D,EAGtC+E,4DAAW,CAAC,oBAAD,EAAuB,KAAK/E,EAA5B,CAH2B,gKAI1D,YAJ0D,EAI5C+E,4DAAW,CAAC,aAAD,EAAgB,KAAK/E,EAArB,CAJiC,gKAK1D,kBAL0D,EAKtC+E,4DAAW,CAAC,oBAAD,EAAuB,KAAK/E,EAA5B,CAL2B,gKAM1D,0BAN0D,EAM9B+F,QAN8B,gKAO1D,yBAP0D,EAO/BD,OAP+B,gKAQ1D,+BAR0D,EAQzBC,QAAQ,IAAI,CAACD,OARY,gKAS1D,8BAT0D,EAS1BA,OAAO,IAAI,CAACC,QATc,gKAU1D,yBAV0D,EAU/BrH,QAV+B,gKAW1D,wBAX0D,EAWhCO,OAXgC,gMAYhCuG,MAZgC,GAYrB,IAZqB,gKAa1D,iBAb0D,EAavC,IAbuC,gKAc1D,yBAd0D,EAc/B,IAd+B,gKAe1D,eAf0D,EAezC,IAfyC;AAAlD,OAAP,EAgBAd,4DAAC,CAAC,QAAD,EAAW;AAAEe,YAAI,EAAEA,IAAR;AAAc,wBAAgBxG,OAAO,GAAG,MAAH,GAAY,OAAjD;AAA0D2F,aAAK,EAAE,eAAjE;AAAkFoB,YAAI,EAAE,QAAxF;AAAkGtH,gBAAQ,EAAEA;AAA5G,OAAX,EAAmIgG,4DAAC,CAAC,MAAD,EAAS;AAAEE,aAAK,EAAE;AAAT,OAAT,EAAoCF,4DAAC,CAAC,MAAD,EAAS,IAAT,CAArC,CAApI,EAA0LF,IAAI,KAAK,IAAT,IAAiBE,4DAAC,CAAC,mBAAD,EAAsB,IAAtB,CAA5M,CAhBD,EAgB2OA,4DAAC,CAAC,KAAD,EAAQ;AAAEsB,YAAI,EAAE,WAAR;AAAqBpB,aAAK,EAAE;AACjR,sCAA4B,IADqP;AAEjR,+CAAqC;AAF4O;AAA5B,OAAR,EAG5OF,4DAAC,CAAC,KAAD,EAAQ;AAAEsB,YAAI,EAAE,sBAAR;AAAgCpB,aAAK,EAAE;AAAvC,OAAR,CAH2O,CAhB5O,CAAT;AAoBH;AAtEc;AAAA;AAAA,wBAyCA;AACX,aAAO,CAAC,CAAC,KAAK5E,EAAL,CAAQ4B,aAAR,CAAsB,WAAtB,CAAT;AACH;AA3Cc;AAAA;AAAA,wBA4CD;AACV,aAAO,CAAC,CAAC,KAAK5B,EAAL,CAAQ4B,aAAR,CAAsB,UAAtB,CAAT;AACH;AA9Cc;AAAA;AAAA,wBAuEN;AAAE,aAAOoD,4DAAU,CAAC,IAAD,CAAjB;AAA0B;AAvEtB;;AAAA;AAAA,GAAnB;;AAyEAM,aAAa,CAACnC,KAAd,GAAsB;AAClB8B,KAAG,EAAEE,mBADa;AAElBD,IAAE,EAAEE;AAFc,CAAtB","file":"31.js","sourcesContent":["import { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement } from './index-92848855.js';\nimport { c as config, b as getIonMode } from './ionic-global-23e7365a.js';\nimport { p as pointerCoord } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-5641d27f.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.didInit = false;\n        this.activated = false;\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         * In addition, this will disable the gesture to drag the indicator between the buttons\n         * in order to swipe to see hidden buttons.\n         */\n        this.scrollable = false;\n        this.onClick = (ev) => {\n            const current = ev.target;\n            const previous = this.checked;\n            this.value = current.value;\n            if (this.scrollable) {\n                if (previous) {\n                    this.checkButton(previous, current);\n                }\n                else {\n                    this.setCheckedClasses();\n                }\n            }\n            this.checked = current;\n        };\n    }\n    valueChanged(value, oldValue) {\n        this.ionSelect.emit({ value });\n        if (oldValue !== '' || this.didInit) {\n            if (!this.activated) {\n                this.ionChange.emit({ value });\n            }\n            else {\n                this.valueAfterGesture = value;\n            }\n        }\n    }\n    disabledChanged() {\n        this.gestureChanged();\n        const buttons = this.getButtons();\n        for (const button of buttons) {\n            button.disabled = this.disabled;\n        }\n    }\n    gestureChanged() {\n        if (this.gesture && !this.scrollable) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    connectedCallback() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    async componentDidLoad() {\n        this.setCheckedClasses();\n        this.gesture = (await import('./index-eea61379.js')).createGesture({\n            el: this.el,\n            gestureName: 'segment',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.gesture.enable(!this.scrollable);\n        this.gestureChanged();\n        if (this.disabled) {\n            this.disabledChanged();\n        }\n        this.didInit = true;\n    }\n    onStart(detail) {\n        this.activate(detail);\n    }\n    onMove(detail) {\n        this.setNextIndex(detail);\n    }\n    onEnd(detail) {\n        this.setActivated(false);\n        const checkedValidButton = this.setNextIndex(detail, true);\n        detail.event.stopImmediatePropagation();\n        if (checkedValidButton) {\n            this.addRipple(detail);\n        }\n        const value = this.valueAfterGesture;\n        if (value !== undefined) {\n            this.ionChange.emit({ value });\n            this.valueAfterGesture = undefined;\n        }\n    }\n    getButtons() {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n    addRipple(detail) {\n        const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n        if (!useRippleEffect) {\n            return;\n        }\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        const root = checked.shadowRoot || checked;\n        const ripple = root.querySelector('ion-ripple-effect');\n        if (!ripple) {\n            return;\n        }\n        const { x, y } = pointerCoord(detail.event);\n        ripple.addRipple(x, y).then(remove => remove());\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    setActivated(activated) {\n        const buttons = this.getButtons();\n        buttons.forEach(button => {\n            if (activated) {\n                button.classList.add('segment-button-activated');\n            }\n            else {\n                button.classList.remove('segment-button-activated');\n            }\n        });\n        this.activated = activated;\n    }\n    activate(detail) {\n        const clicked = detail.event.target;\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n            this.setCheckedClasses();\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    }\n    getIndicator(button) {\n        const root = button.shadowRoot || button;\n        return root.querySelector('.segment-button-indicator');\n    }\n    checkButton(previous, current) {\n        const previousIndicator = this.getIndicator(previous);\n        const currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        const previousClientRect = previousIndicator.getBoundingClientRect();\n        const currentClientRect = currentIndicator.getBoundingClientRect();\n        const widthDelta = previousClientRect.width / currentClientRect.width;\n        const xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n        writeTask(() => {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    }\n    setCheckedClasses() {\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const next = index + 1;\n        // Keep track of the currently checked button\n        this.checked = buttons.find(button => button.value === this.value);\n        for (const button of buttons) {\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    }\n    setNextIndex(detail, isEnd = false) {\n        const isRTL = document.dir === 'rtl';\n        const activated = this.activated;\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const previous = buttons[index];\n        let current;\n        let nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        const rect = previous.getBoundingClientRect();\n        const left = rect.left;\n        const width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        const currentX = detail.currentX;\n        const previousY = rect.top + (rect.height / 2);\n        const nextEl = document.elementFromPoint(currentX, previousY);\n        const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n        const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                const newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    const newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        /* tslint:disable-next-line */\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'segment-activated': this.activated,\n                'segment-disabled': this.disabled,\n                'segment-scrollable': this.scrollable\n            }) }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nSegment.style = {\n    ios: segmentIosCss,\n    md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.updateState = () => {\n            if (this.segmentEl) {\n                this.checked = this.segmentEl.value === this.value;\n            }\n        };\n    }\n    connectedCallback() {\n        const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n        if (segmentEl) {\n            this.updateState();\n            segmentEl.addEventListener('ionSelect', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const segmentEl = this.segmentEl;\n        if (segmentEl) {\n            segmentEl.removeEventListener('ionSelect', this.updateState);\n            this.segmentEl = null;\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    render() {\n        const { checked, type, disabled, hasIcon, hasLabel, layout } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-segment': hostContext('ion-segment', this.el),\n                'in-segment-color': hostContext('ion-segment[color]', this.el),\n                'segment-button-has-label': hasLabel,\n                'segment-button-has-icon': hasIcon,\n                'segment-button-has-label-only': hasLabel && !hasIcon,\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\n                'segment-button-disabled': disabled,\n                'segment-button-checked': checked,\n                [`segment-button-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-activatable-instant': true,\n                'ion-focusable': true,\n            } }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : 'false', class: \"button-native\", part: \"native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n                'segment-button-indicator': true,\n                'segment-button-indicator-animated': true\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    }\n    get el() { return getElement(this); }\n};\nSegmentButton.style = {\n    ios: segmentButtonIosCss,\n    md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"],"sourceRoot":"webpack:///"}