{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","registerInstance","ionRouteDataChanged","createEvent","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","chainToPath","chain","route","segment","param","params","slice","push","writePath","history","root","useHash","direction","state","queryString","parsePath","undefined","pushState","replaceState","removePrefix","prefix","i","readPath","loc","pathname","hash","removeQueryString","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","componentOnReady","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","Promise","resolve","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","input","expected","routeRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","a","b","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readRedirects","Array","children","el","tagName","readProp","readRoutes","flattenRouterTree","readRouteNodes","component","Error","componentProps","beforeLeave","beforeEnter","prop","hasAttribute","getAttribute","nodes","flattenNode","sub","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","onRoutesChanged","debounce","onRedirectChanged","bind","historyDirection","getPath","runGuards","canProceed","writeNavStateRoot","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","setPath","waitPromise","warn","safeWriteNavState","win","title","redirectFrom","lock","unlock","p","toChain","fromChain","beforeEnterHook","beforeLeaveHook","canLeave","canEnter","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","getElement","routerLinkCss","RouterLink","routerDirection","onClick","openURL","routerAnimation","mode","getIonMode","attrs","rel","target","h","Host","class","createColorClasses","color","style"],"mappings":"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","file":"29.js","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { e as debounce } from './helpers-5c745fbd.js';\nimport { o as openURL, c as createColorClasses } from './theme-5641d27f.js';\n\nconst Route = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n        /**\n         * Relative path that needs to match in order for this route to apply.\n         *\n         * Accepts paths similar to expressjs so that you can define parameters\n         * in the url /foo/:bar where bar would be available in incoming props.\n         */\n        this.url = '';\n    }\n    onUpdate(newValue) {\n        this.ionRouteDataChanged.emit(newValue);\n    }\n    onComponentProps(newValue, oldValue) {\n        if (newValue === oldValue) {\n            return;\n        }\n        const keys1 = newValue ? Object.keys(newValue) : [];\n        const keys2 = oldValue ? Object.keys(oldValue) : [];\n        if (keys1.length !== keys2.length) {\n            this.onUpdate(newValue);\n            return;\n        }\n        for (const key of keys1) {\n            if (newValue[key] !== oldValue[key]) {\n                this.onUpdate(newValue);\n                return;\n            }\n        }\n    }\n    connectedCallback() {\n        this.ionRouteDataChanged.emit();\n    }\n    static get watchers() { return {\n        \"url\": [\"onUpdate\"],\n        \"component\": [\"onUpdate\"],\n        \"componentProps\": [\"onComponentProps\"]\n    }; }\n};\n\nconst RouteRedirect = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n    }\n    propDidChange() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    connectedCallback() {\n        this.ionRouteRedirectChanged.emit();\n    }\n    static get watchers() { return {\n        \"from\": [\"propDidChange\"],\n        \"to\": [\"propDidChange\"]\n    }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\n    const path = segments\n        .filter(s => s.length > 0)\n        .join('/');\n    return '/' + path;\n};\nconst chainToPath = (chain) => {\n    const path = [];\n    for (const route of chain) {\n        for (const segment of route.path) {\n            if (segment[0] === ':') {\n                const param = route.params && route.params[segment.slice(1)];\n                if (!param) {\n                    return null;\n                }\n                path.push(param);\n            }\n            else if (segment !== '') {\n                path.push(segment);\n            }\n        }\n    }\n    return path;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n    let url = generatePath([\n        ...parsePath(root),\n        ...path\n    ]);\n    if (useHash) {\n        url = '#' + url;\n    }\n    if (queryString !== undefined) {\n        url = url + '?' + queryString;\n    }\n    if (direction === ROUTER_INTENT_FORWARD) {\n        history.pushState(state, '', url);\n    }\n    else {\n        history.replaceState(state, '', url);\n    }\n};\nconst removePrefix = (prefix, path) => {\n    if (prefix.length > path.length) {\n        return null;\n    }\n    if (prefix.length <= 1 && prefix[0] === '') {\n        return path;\n    }\n    for (let i = 0; i < prefix.length; i++) {\n        if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n            return null;\n        }\n    }\n    if (path.length === prefix.length) {\n        return [''];\n    }\n    return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n    let pathname = loc.pathname;\n    if (useHash) {\n        const hash = loc.hash;\n        pathname = (hash[0] === '#')\n            ? hash.slice(1)\n            : '';\n    }\n    const prefix = parsePath(root);\n    const path = parsePath(pathname);\n    return removePrefix(prefix, path);\n};\nconst parsePath = (path) => {\n    if (path == null) {\n        return [''];\n    }\n    const removeQueryString = path.split('?')[0];\n    const segments = removeQueryString.split('/')\n        .map(s => s.trim())\n        .filter(s => s.length > 0);\n    if (segments.length === 0) {\n        return [''];\n    }\n    else {\n        return segments;\n    }\n};\n\nconst printRoutes = (routes) => {\n    console.group(`[ion-core] ROUTES[${routes.length}]`);\n    for (const chain of routes) {\n        const path = [];\n        chain.forEach(r => path.push(...r.path));\n        const ids = chain.map(r => r.id);\n        console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n    }\n    console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n    console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n    for (const redirect of redirects) {\n        if (redirect.to) {\n            console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n        }\n    }\n    console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n    try {\n        // find next navigation outlet in the DOM\n        const outlet = searchNavNode(root);\n        // make sure we can continue interacting the DOM, otherwise abort\n        if (index >= chain.length || !outlet) {\n            return changed;\n        }\n        await outlet.componentOnReady();\n        const route = chain[index];\n        const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n        // if the outlet changed the page, reset navigation to neutral (no direction)\n        // this means nested outlets will not animate\n        if (result.changed) {\n            direction = ROUTER_INTENT_NONE;\n            changed = true;\n        }\n        // recursively set nested outlets\n        changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n        // once all nested outlets are visible let's make the parent visible too,\n        // using markVisible prevents flickering\n        if (result.markVisible) {\n            await result.markVisible();\n        }\n        return changed;\n    }\n    catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nconst readNavState = async (root) => {\n    const ids = [];\n    let outlet;\n    let node = root;\n    // tslint:disable-next-line:no-constant-condition\n    while (true) {\n        outlet = searchNavNode(node);\n        if (outlet) {\n            const id = await outlet.getRouteId();\n            if (id) {\n                node = id.element;\n                id.element = undefined;\n                ids.push(id);\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            break;\n        }\n    }\n    return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n    if (searchNavNode(document.body)) {\n        return Promise.resolve();\n    }\n    return new Promise(resolve => {\n        window.addEventListener('ionNavWillLoad', resolve, { once: true });\n    });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n    if (!root) {\n        return undefined;\n    }\n    if (root.matches(QUERY)) {\n        return root;\n    }\n    const outlet = root.querySelector(QUERY);\n    return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n    const { from, to } = route;\n    if (to === undefined) {\n        return false;\n    }\n    if (from.length > input.length) {\n        return false;\n    }\n    for (let i = 0; i < from.length; i++) {\n        const expected = from[i];\n        if (expected === '*') {\n            return true;\n        }\n        if (expected !== input[i]) {\n            return false;\n        }\n    }\n    return from.length === input.length;\n};\nconst routeRedirect = (path, routes) => {\n    return routes.find(route => matchesRedirect(path, route));\n};\nconst matchesIDs = (ids, chain) => {\n    const len = Math.min(ids.length, chain.length);\n    let i = 0;\n    for (; i < len; i++) {\n        if (ids[i].toLowerCase() !== chain[i].id) {\n            break;\n        }\n    }\n    return i;\n};\nconst matchesPath = (inputPath, chain) => {\n    const segments = new RouterSegments(inputPath);\n    let matchesDefault = false;\n    let allparams;\n    for (let i = 0; i < chain.length; i++) {\n        const path = chain[i].path;\n        if (path[0] === '') {\n            matchesDefault = true;\n        }\n        else {\n            for (const segment of path) {\n                const data = segments.next();\n                // data param\n                if (segment[0] === ':') {\n                    if (data === '') {\n                        return null;\n                    }\n                    allparams = allparams || [];\n                    const params = allparams[i] || (allparams[i] = {});\n                    params[segment.slice(1)] = data;\n                }\n                else if (data !== segment) {\n                    return null;\n                }\n            }\n            matchesDefault = false;\n        }\n    }\n    const matches = (matchesDefault)\n        ? matchesDefault === (segments.next() === '')\n        : true;\n    if (!matches) {\n        return null;\n    }\n    if (allparams) {\n        return chain.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, allparams[i])\n        }));\n    }\n    return chain;\n};\nconst mergeParams = (a, b) => {\n    if (!a && b) {\n        return b;\n    }\n    else if (a && !b) {\n        return a;\n    }\n    else if (a && b) {\n        return Object.assign(Object.assign({}, a), b);\n    }\n    return undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n    let match = null;\n    let maxMatches = 0;\n    const plainIDs = ids.map(i => i.id);\n    for (const chain of chains) {\n        const score = matchesIDs(plainIDs, chain);\n        if (score > maxMatches) {\n            match = chain;\n            maxMatches = score;\n        }\n    }\n    if (match) {\n        return match.map((route, i) => ({\n            id: route.id,\n            path: route.path,\n            params: mergeParams(route.params, ids[i] && ids[i].params)\n        }));\n    }\n    return null;\n};\nconst routerPathToChain = (path, chains) => {\n    let match = null;\n    let matches = 0;\n    for (const chain of chains) {\n        const matchedChain = matchesPath(path, chain);\n        if (matchedChain !== null) {\n            const score = computePriority(matchedChain);\n            if (score > matches) {\n                matches = score;\n                match = matchedChain;\n            }\n        }\n    }\n    return match;\n};\nconst computePriority = (chain) => {\n    let score = 1;\n    let level = 1;\n    for (const route of chain) {\n        for (const path of route.path) {\n            if (path[0] === ':') {\n                score += Math.pow(1, level);\n            }\n            else if (path !== '') {\n                score += Math.pow(2, level);\n            }\n            level++;\n        }\n    }\n    return score;\n};\nclass RouterSegments {\n    constructor(path) {\n        this.path = path.slice();\n    }\n    next() {\n        if (this.path.length > 0) {\n            return this.path.shift();\n        }\n        return '';\n    }\n}\n\nconst readRedirects = (root) => {\n    return Array.from(root.children)\n        .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n        .map(el => {\n        const to = readProp(el, 'to');\n        return {\n            from: parsePath(readProp(el, 'from')),\n            to: to == null ? undefined : parsePath(to),\n        };\n    });\n};\nconst readRoutes = (root) => {\n    return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (root, node = root) => {\n    return Array.from(node.children)\n        .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n        .map(el => {\n        const component = readProp(el, 'component');\n        if (component == null) {\n            throw new Error('component missing in ion-route');\n        }\n        return {\n            path: parsePath(readProp(el, 'url')),\n            id: component.toLowerCase(),\n            params: el.componentProps,\n            beforeLeave: el.beforeLeave,\n            beforeEnter: el.beforeEnter,\n            children: readRouteNodes(root, el)\n        };\n    });\n};\nconst readProp = (el, prop) => {\n    if (prop in el) {\n        return el[prop];\n    }\n    if (el.hasAttribute(prop)) {\n        return el.getAttribute(prop);\n    }\n    return null;\n};\nconst flattenRouterTree = (nodes) => {\n    const routes = [];\n    for (const node of nodes) {\n        flattenNode([], routes, node);\n    }\n    return routes;\n};\nconst flattenNode = (chain, routes, node) => {\n    const s = chain.slice();\n    s.push({\n        id: node.id,\n        path: node.path,\n        params: node.params,\n        beforeLeave: node.beforeLeave,\n        beforeEnter: node.beforeEnter\n    });\n    if (node.children.length === 0) {\n        routes.push(s);\n        return;\n    }\n    for (const sub of node.children) {\n        flattenNode(s, routes, sub);\n    }\n};\n\nconst Router = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n        this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n        this.previousPath = null;\n        this.busy = false;\n        this.state = 0;\n        this.lastState = 0;\n        /**\n         * By default `ion-router` will match the routes at the root path (\"/\").\n         * That can be changed when\n         *\n         */\n        this.root = '/';\n        /**\n         * The router can work in two \"modes\":\n         * - With hash: `/index.html#/path/to/page`\n         * - Without hash: `/path/to/page`\n         *\n         * Using one or another might depend in the requirements of your app and/or where it's deployed.\n         *\n         * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n         * requires additional server-side configuration in order to properly work.\n         *\n         * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n         *\n         * By default, this property is `true`, change to `false` to allow hash-less URLs.\n         */\n        this.useHash = true;\n    }\n    async componentWillLoad() {\n        console.debug('[ion-router] router will load');\n        await waitUntilNavNode();\n        console.debug('[ion-router] found nav');\n        await this.onRoutesChanged();\n    }\n    componentDidLoad() {\n        window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n        window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n    }\n    async onPopState() {\n        const direction = this.historyDirection();\n        let path = this.getPath();\n        const canProceed = await this.runGuards(path);\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                path = parsePath(canProceed.redirect);\n            }\n            return false;\n        }\n        console.debug('[ion-router] URL changed -> update nav', path, direction);\n        return this.writeNavStateRoot(path, direction);\n    }\n    onBackButton(ev) {\n        ev.detail.register(0, processNextHandler => {\n            this.back();\n            processNextHandler();\n        });\n    }\n    /** @internal */\n    async canTransition() {\n        const canProceed = await this.runGuards();\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                return canProceed.redirect;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Navigate to the specified URL.\n     *\n     * @param url The url to navigate to.\n     * @param direction The direction of the animation. Defaults to `\"forward\"`.\n     */\n    async push(url, direction = 'forward', animation) {\n        if (url.startsWith('.')) {\n            url = (new URL(url, window.location.href)).pathname;\n        }\n        console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n        let path = parsePath(url);\n        let queryString = url.split('?')[1];\n        const canProceed = await this.runGuards(path);\n        if (canProceed !== true) {\n            if (typeof canProceed === 'object') {\n                path = parsePath(canProceed.redirect);\n                queryString = canProceed.redirect.split('?')[1];\n            }\n            else {\n                return false;\n            }\n        }\n        this.setPath(path, direction, queryString);\n        return this.writeNavStateRoot(path, direction, animation);\n    }\n    /**\n     * Go back to previous page in the window.history.\n     */\n    back() {\n        window.history.back();\n        return Promise.resolve(this.waitPromise);\n    }\n    /** @internal */\n    async printDebug() {\n        console.debug('CURRENT PATH', this.getPath());\n        console.debug('PREVIOUS PATH', this.previousPath);\n        printRoutes(readRoutes(this.el));\n        printRedirects(readRedirects(this.el));\n    }\n    /** @internal */\n    async navChanged(direction) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, navChanged was cancelled');\n            return false;\n        }\n        const { ids, outlet } = await readNavState(window.document.body);\n        const routes = readRoutes(this.el);\n        const chain = routerIDsToChain(ids, routes);\n        if (!chain) {\n            console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n            return false;\n        }\n        const path = chainToPath(chain);\n        if (!path) {\n            console.warn('[ion-router] router could not match path because some required param is missing');\n            return false;\n        }\n        console.debug('[ion-router] nav changed -> update URL', ids, path);\n        this.setPath(path, direction);\n        await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n        return true;\n    }\n    onRedirectChanged() {\n        const path = this.getPath();\n        if (path && routeRedirect(path, readRedirects(this.el))) {\n            this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n        }\n    }\n    onRoutesChanged() {\n        return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n    }\n    historyDirection() {\n        const win = window;\n        if (win.history.state === null) {\n            this.state++;\n            win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n        }\n        const state = win.history.state;\n        const lastState = this.lastState;\n        this.lastState = state;\n        if (state > lastState || (state >= lastState && lastState > 0)) {\n            return ROUTER_INTENT_FORWARD;\n        }\n        else if (state < lastState) {\n            return ROUTER_INTENT_BACK;\n        }\n        else {\n            return ROUTER_INTENT_NONE;\n        }\n    }\n    async writeNavStateRoot(path, direction, animation) {\n        if (!path) {\n            console.error('[ion-router] URL is not part of the routing set');\n            return false;\n        }\n        // lookup redirect rule\n        const redirects = readRedirects(this.el);\n        const redirect = routeRedirect(path, redirects);\n        let redirectFrom = null;\n        if (redirect) {\n            this.setPath(redirect.to, direction);\n            redirectFrom = redirect.from;\n            path = redirect.to;\n        }\n        // lookup route chain\n        const routes = readRoutes(this.el);\n        const chain = routerPathToChain(path, routes);\n        if (!chain) {\n            console.error('[ion-router] the path does not match any route');\n            return false;\n        }\n        // write DOM give\n        return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n    }\n    async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n        const unlock = await this.lock();\n        let changed = false;\n        try {\n            changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n        }\n        catch (e) {\n            console.error(e);\n        }\n        unlock();\n        return changed;\n    }\n    async lock() {\n        const p = this.waitPromise;\n        let resolve;\n        this.waitPromise = new Promise(r => resolve = r);\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    }\n    async runGuards(to = this.getPath(), from = parsePath(this.previousPath)) {\n        if (!to || !from) {\n            return true;\n        }\n        const routes = readRoutes(this.el);\n        const toChain = routerPathToChain(to, routes);\n        const fromChain = routerPathToChain(from, routes);\n        const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n        const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n        const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n        if (canLeave === false || typeof canLeave === 'object') {\n            return canLeave;\n        }\n        const canEnter = beforeEnterHook ? await beforeEnterHook() : true;\n        if (canEnter === false || typeof canEnter === 'object') {\n            return canEnter;\n        }\n        return true;\n    }\n    async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n        if (this.busy) {\n            console.warn('[ion-router] router is busy, transition was cancelled');\n            return false;\n        }\n        this.busy = true;\n        // generate route event and emit will change\n        const routeEvent = this.routeChangeEvent(path, redirectFrom);\n        if (routeEvent) {\n            this.ionRouteWillChange.emit(routeEvent);\n        }\n        const changed = await writeNavState(node, chain, direction, index, false, animation);\n        this.busy = false;\n        if (changed) {\n            console.debug('[ion-router] route changed', path);\n        }\n        // emit did change\n        if (routeEvent) {\n            this.ionRouteDidChange.emit(routeEvent);\n        }\n        return changed;\n    }\n    setPath(path, direction, queryString) {\n        this.state++;\n        writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n    }\n    getPath() {\n        return readPath(window.location, this.root, this.useHash);\n    }\n    routeChangeEvent(path, redirectFromPath) {\n        const from = this.previousPath;\n        const to = generatePath(path);\n        this.previousPath = to;\n        if (to === from) {\n            return null;\n        }\n        const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n        return {\n            from,\n            redirectedFrom,\n            to,\n        };\n    }\n    get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * When using a router, it specifies the transition direction when navigating to\n         * another page using `href`.\n         */\n        this.routerDirection = 'forward';\n        this.onClick = (ev) => {\n            openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n        };\n    }\n    render() {\n        const mode = getIonMode(this);\n        const attrs = {\n            href: this.href,\n            rel: this.rel,\n            target: this.target\n        };\n        return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n                [mode]: true,\n                'ion-activatable': true\n            }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n    }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"],"sourceRoot":"webpack:///"}